{exec} = require 'child_process'
path   = require 'path'

# add node_modules binaries to head of path
process.env.PATH += ":#{path.join process.cwd(), 'node_modules', '.bin'}"

assertAll = (cmd...) ->
  do assertHelper = ->
    return unless cmd.length
    first = cmd[0]
    if typeof first == 'string'
      exec first, (err, stdout, stderr) ->
        if err
          console.warn "error: #{stderr.trim()}"
          process.exit 1
        else
          do cmd.shift
          do assertHelper
    else
      err = do first
      if typeof err is 'string'
        console.warn "error: #{err}"
        process.exit 1
      do cmd.shift
      do assertHelper

task 'web', 'build ccloader.js for use in websites', (options) ->
  assertAll 'coffee -p lib/ccloader/web.coffee > ccloader.js'

task 'clean', 'clean everything generated by build system', (options) ->
  assertAll "rm -rf `grep '^/' .gitignore | sed 's,^/,,'`"

task 'test', 'test ccloader', (options) ->
  # joose-2.1: wget http://joose-js.googlecode.com/files/joose.mini.js -O $@
  invoke 'web'
  assertAll 'ln -sf ../../ccloader.js test/web',
    'cp -n node_modules/joose/joose-all-web.js test/web/joose.js'
    './bin/ccbaker test/web/lib/root.js test/web/lib/joose/root.js > test/web/lib/packed.js'
    ->
      express = require 'express'
      app     = express.createServer express.logger()
      path    = require 'path'

      port = process.env.port or 8012

      app.configure () ->
        app.use express.static path.join(process.cwd(), 'test', 'web')

      console.log "ccloader test server listening on: #{port}"
      console.log "please go to http://localhost:#{port}/"
      app.listen port

# vim:ts=2 sw=2
